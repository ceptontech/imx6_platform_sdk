#!/bin/bash
#
# build_obds
#

script=$(basename $0)
script_full=$(which $0)
script_path=$(dirname $script_full)
clean_flag=n

usage()
{
    echo "Generate a release packgae for the OBDS project."
    echo "Only files releavant for the platform specified as argument are copied to the release folder."
    echo
    echo "Usage: "
    echo "   $script [-target <mx28, mx50, mx53...>] [-board <evk .....>]"
    echo "   Must be executed in the diag-obds tree. The '-clean' is an optional"
    echo "   argument to be used in case you wish to do a clean build"
    echo
    echo "For eg: 1. $script -target mx53 -board ard"
    echo "        2. $script -target mx28 -board evk"
    echo
    echo "Installation:"
    echo "   Clone the diag-obds project and add the diag-obds/tools directory"
    echo "   to your path somewhere."
    echo
    exit 1
}

if [ $# -lt 1 ]; then
    echo "Need to specify -target & -board as arguments"
    echo
    echo "$script:"
    usage
fi

if echo "$@"|egrep -sq '\-(h|H)'; then
    eval usage
fi

obds_dir=$PWD

while [ ! -f tools/gen_release.pl -o ! -d src/init ]; do
    if [ "$obds_dir" = / ]; then
        echo "Couldn't find root of OBDS tree. Script must be executed from root of OBDS tree"
        eval usage
    fi
    cd ..
    obds_dir=$PWD
done

config_dir=$obds_dir/configs
make_perl_script=$obds_dir/tools/gen_make.pl
release_perl_script=$obds_dir/tools/gen_release.pl

while [ $# -gt 0 ]; do
    case $1 in
    -target )   soc_name=$2
                shift
            ;;

    -board )    board_name=\_$2
                shift
            ;;

    * )     echo "Incorrect parameter: $1"
            echo
            echo "$script:"
            usage
            ;;
    esac
    shift
done

release_dir=$obds_dir/imx_obds_release/$soc_name$board_name\_release

echo "Generating Makefiles for $soc_name$board_name"
perl $make_perl_script $config_dir $obds_dir $soc_name $board_name

if [ $? -eq 1 ]; then
    echo
    echo "Failed to run the gen_make perl script."
    echo "Please double check the -board & -target arguments passed in"
    echo
    echo "$script:"
    usage
    exit 1
fi

echo "Copying files to Release folder"
perl $release_perl_script $config_dir $obds_dir $release_dir $soc_name $board_name

echo
echo "Done...Release folder created"
echo
echo "Generating doxygen documentation"

saved_curr_working_dir=$PWD
cd $release_dir
# Variable used in the doxygen title page, convert to upper case
export IMX_SOC_NAME=$(echo $soc_name |tr '[a-z]' '[A-Z]')
$obds_dir/tools/doxygenate_obds -obds_dir $obds_dir
cd $saved_curr_working_dir

echo "Done...Release ready in $release_dir folder"
echo