#!/bin/bash
#
# doxygenate_sdk
#
script=$(basename $0)
script_full=$(which $0)
script_path=$(dirname $script_full)
generate_list_only=n

usage()
{
    echo
    echo "Creates a file list for doxygen config and runs doxygen to create docs."
    echo
    echo "Usage: $script [-l] [-sdk_dir]"
    echo "   Must be executed in the diag-sdk tree."
    echo
    echo "Normal usage: cd to your diag-sdk source and run:"
    echo "   $script"
    echo
    echo "To generates a file list without actually create the doxygen docs:"
    echo "   $script -l"
    echo
    echo "Specify the base of the SDK directory, else assumes PWD:"
    echo "   $script -sdk_dir /home/user/diag-sdk"
    echo
    exit 1
}

create_list()
{
    #
    # Make a list of C source files
    # Modified to only extract the sdk releated files
	#
    cd $release_sdk_dir/src/sdk
    find . -type f -name '*.[ch]' -o -name "*.inc" -o -name "*.S"| \
        sed 's,\.\/,\$(SDK_PATH)\/src\/sdk/,g' > $doxygen_output_dir/doxy-file.txt

    cd $doxygen_output_dir
    sort $doxygen_output_dir/doxy-file.txt -o $doxygen_output_dir/doxy-file.txt
}

#==============================================================================

release_sdk_dir=
doxygen_output_dir=
base_sdk_dir=

if echo "$@"|egrep -sq '\-(h|H)'; then
    eval usage
fi

saved_pwd=$PWD
release_sdk_dir=$PWD
while [ ! -d tools ]; do
    if [ "$release_sdk_dir" = / ]; then
        echo "Couldn't find root of linux tree"
        eval usage
    fi
    cd ..
    release_sdk_dir=$PWD
done
cd ..
export SDK_PATH=$release_sdk_dir
#Assume the Base SDK folder is the release folder unless passed in as argument
base_sdk_dir=$release_sdk_dir

while [ $# -gt 0 ]; do
    case $1 in
    --list | -l )   generate_list_only=y
        ;;

    -sdk_dir )     base_sdk_dir=$2
                    shift
        ;;

    * )     echo "Incorrect parameter: $1"
            echo
            echo "$script:"
            usage
        ;;
    esac
    shift
done

echo "SDK path is:  $release_sdk_dir"


cd $release_sdk_dir

doxygen_output_dir=$release_sdk_dir/doxygen_config
if [ ! -d $doxygen_output_dir ]; then
    mkdir $doxygen_output_dir
fi

create_list
#cd $doxygen_output_dir/config

wc -l $doxygen_output_dir/doxy-file.txt

if [ "$generate_list_only" = y ]; then
    exit
fi

export DOXYGEN_INPUT=$(cat $doxygen_output_dir/doxy-file.txt |tr '\n' ' ')

rm -rf   $doxygen_output_dir/sdk_doc $doxygen_output_dir/logs
mkdir -p $doxygen_output_dir/logs

# Copy the doxygen configs into the release
cp $base_sdk_dir/tools/doxygen_config/* $doxygen_output_dir
cd $base_sdk_dir/tools/doxygen_config
doxygen doxygen_sdk.cfg 2>&1 | tee $doxygen_output_dir/logs/sdk_doxygen_log.txt
#doxygen doxygen_sdk.cfg
cd $release_sdk_dir

#Delete all files used for doxygen documentation generation
rm -rf $doxygen_output_dir
